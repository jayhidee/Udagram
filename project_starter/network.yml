Parameters:
  # Paramenters are entirely optional.
  # but using them will make your cloudformation templates more reusable
  # use them for things that may change over time, such as instance type,
  # VPCs and so on.
  VPCCIDR:
    Type: String
  PrivSubnet1CIDR:
    Type: String
  PubSubnet1CIDR:
    Type: String
  PrivSubnet2CIDR:
    Type: String
  PubSubnet2CIDR:
    Type: String
  PublicSubnetOne:
    Type: String
  PublicSubnetTwo:
    Type: String
  PrivateSubnetOne:
    Type: String
  PrivateSubnetTwo:
    Type: String
  EnvironmentName:
    Type: String

Resources:
  # instace profile contains the IAM Role name(s) that we want to associate to our auto scaling EC2 Servers
  # never give too much permissions to your EC2 instances! if they get hacked, the permissions get hacked also!
  # in this example, I create a Role called UdacityS3ReadOnlyC2 and just give it a policy of S3 Read-Only Access
  
  
  #Outer VPC (Main)
  MainVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCIDR
      Tags: 
        - Key: Name
          Value: "Outer VPC"
  
  
#Internet Gateway and attachment
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: Use
          Value: "Application Gateway to the world"
  
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MainVPC
      InternetGatewayId: !Ref InternetGateway

  # Subnets
  # Availability Zone One
  privateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: "Private Subnet Availability Zone 1"
      VpcId: !Ref MainVPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PubSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: "Public Subnet Availability Zone 1"
      VpcId: !Ref MainVPC

  # Availability Zone Two
  privateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: "Private Subnet Availability Zone 2"
      VpcId: !Ref MainVPC

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PubSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: "Public Subnet Availability Zone 2"
      VpcId: !Ref MainVPC
  

  # Network Access Gateway
  NATGatewayOne:
   Type: AWS::EC2::NatGateway
   Properties:
      AllocationId:
         Fn::GetAtt:
         - EIP1
         - AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
      - Key: Name
        Value: "Public Subnet 1"

  NATGatewayTwo:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
         Fn::GetAtt:
         - EIP2
         - AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
      - Key: Name
        Value: "Public Subnet 1"

  EIP1:
    Type: AWS::EC2::EIP
    Properties:
        Tags:
          - Key: Name
            Value: "Elastic IP for NAT Gateway"

  EIP2:
    Type: AWS::EC2::EIP
    Properties:
        Tags:
          - Key: Name
            Value: "Elastic IP for NAT Gateway"




  # Route Table
  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: "Private Route Table"
      VpcId: !Ref MainVPC
  
  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: "Private Route Table"
      VpcId: !Ref MainVPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: Name
          Value: "Public Route Table"
      VpcId: !Ref MainVPC

  PublicInternetRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PrivateInternetOutboundRouteAZOne:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayOne
  
  PrivateInternetOutboundRouteAZTwo:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGatewayTwo

  # Security Groups
  WebAccessSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to our reach LB
        VpcId: !Ref MainVPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
  
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
        GroupDescription: Allow http to our test host
        VpcId: !Ref MainVPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 0
            ToPort: 4999
            CidrIp: 0.0.0.0/0


Outputs:
  VPCOutput: 
    Description: A reference to the created VPC
    Value: !Ref MainVPC
    Export:
      Name: !Sub ${EnvironmentName}MainVPC
  
  IGOutput: 
    Description: A reference to the created Internet gateway
    Value: !Ref InternetGateway
    Export:
      Name: !Sub ${EnvironmentName}IG
  
  PrivSubOutput1: 
    Description: A reference to the created Private subnet 1
    Value: !Ref privateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}PrivSub1

  PrivSubOutput2: 
    Description: A reference to the created Private subnet 2
    Value: !Ref privateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}PrivSub2
  
  PubSubOutput1: 
    Description: A reference to the created Public subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}PubSub1
  
  PubSubOutput2: 
    Description: A reference to the created Public subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}PubSub2
  
  NATOutput1: 
    Description: A reference to the created Private subnet 1
    Value: !Ref NATGatewayOne
    Export:
      Name: !Sub ${EnvironmentName}NAT1

  NATOutput2: 
    Description: A reference to the created Private subnet 2
    Value: !Ref NATGatewayTwo
    Export:
      Name: !Sub ${EnvironmentName}NAT2
  
  EIPOutput1: 
    Description: A reference to the created Public subnet 1
    Value: !Ref EIP1
    Export:
      Name: !Sub ${EnvironmentName}EIP1
  
  EIPOutput2: 
    Description: A reference to the created Public subnet 2
    Value: !Ref EIP2
    Export:
      Name: !Sub ${EnvironmentName}EIP2
  
  RouteOutput: 
    Description: A reference to the created For Route output
    Value: !Ref Route
    Export:
      Name: !Sub ${EnvironmentName}RouteOutput
  
  PRTOutput1: 
    Description: A reference to the created Private Route table 1
    Value: !Ref PrivateRouteTable1
    Export:
      Name: !Sub ${EnvironmentName}PRT1
  
  PRTOutput2: 
    Description: A reference to the created Private route table 2
    Value: !Ref PrivateRouteTable2
    Export:
      Name: !Sub ${EnvironmentName}PRT2
  
  PURTOutput: 
    Description: A reference to the created Public route table
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${EnvironmentName}PURT

  PIROutput: 
    Description: A reference to the created Public internet route
    Value: !Ref PublicInternetRoute
    Export:
      Name: !Sub ${EnvironmentName}PIR
  
  PIORAZOutput1: 
    Description: A reference to the created Private outbound route az1
    Value: !Ref PrivateInternetOutboundRouteAZOne
    Export:
      Name: !Sub ${EnvironmentName}PIORAZ1
  
  PIORAZOutput2:
    Description: A reference to the created Private outbound route az2
    Value: !Ref PrivateInternetOutboundRouteAZTwo
    Export:
      Name: !Sub ${EnvironmentName}PIORAZ2

  PublicSubnets:
    Description: A list of the public subnets
    Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]
    Export:
      Name: !Sub ${EnvironmentName}PUBNETS

  PrivateSubnets:
    Description: A list of the private subnets
    Value: !Join [ ",", [ !Ref privateSubnet1, !Ref privateSubnet2 ]]
    Export:
      Name: !Sub ${EnvironmentName}PRIVNETS
  

  SGLB: 
    Description: A reference to the created VPC
    Value: !Ref WebAccessSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}SGLB
  SGEC2: 
    Description: A reference to the created VPC
    Value: !Ref EC2SecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}SGEC2
  